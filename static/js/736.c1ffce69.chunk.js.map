{"version":3,"file":"static/js/736.c1ffce69.chunk.js","mappings":"kLAIMA,EAAUC,EAAAA,GAAAA,IAAU,sFAMpBC,EAAOD,EAAAA,GAAAA,QAAc,kZAwBrBE,EAA0BF,EAAAA,GAAAA,IAAU,4IAUpCG,EAAUH,EAAAA,GAAAA,IAAU,+DAKpBI,EAAkBJ,EAAAA,GAAAA,IAAU,6FAM5BK,EAAcL,EAAAA,GAAAA,IAAU,mbA2BxBM,EAAYN,EAAAA,GAAAA,IAAU,6DAKtBO,EAAaP,EAAAA,GAAAA,IAAU,uGAQvBQ,EAAqBR,EAAAA,GAAAA,IAAU,qFAK/BS,EAAS,WAAO,IAAD,YACbC,GAAWC,EAAAA,EAAAA,UAAS,UAAU,kBAClCC,MAAM,mDAAmDC,MAAK,SAACC,GAAG,OAChEA,EAAIC,MAAM,GACX,IAGGC,GAAWL,EAAAA,EAAAA,UAAS,cAAc,kBACtCC,MACE,yEACAC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,GAAC,IAGvBE,EAAmBP,EAASQ,WAAaF,EAASE,UAExDC,QAAQC,IAAIH,GAkBZ,OACE,SAAClB,EAAO,WACN,SAACE,EAAI,UACFgB,GACC,iCACE,SAACf,EAAuB,WACtB,SAACE,EAAe,OAElB,UAACC,EAAW,YACV,6BACE,SAACC,EAAS,oBAAkB,KAAC,SAACE,EAAkB,QAElD,6BACE,SAACF,EAAS,mBAAiB,KAAC,SAACE,EAAkB,QAEjD,6BACE,SAACF,EAAS,wBAAsB,KAAC,SAACE,EAAkB,QAEtD,6BACE,SAACF,EAAS,yBAAuB,KAAC,SAACE,EAAkB,QAEvD,6BACE,SAACF,EAAS,2BAAyB,KAAC,SAACE,EAAkB,cAK7D,iCACE,SAACN,EAAuB,WACtB,SAACC,EAAO,CAACkB,IAAkB,QAAf,EAAEX,EAASY,YAAI,aAAb,EAAeC,gBAE/B,UAAClB,EAAW,YACV,6BACE,SAACC,EAAS,oBAAmB,KAC7B,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeE,OAAmB,QAEjD,6BACE,SAAClB,EAAS,mBAAkB,KAC5B,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeG,UAE9B,6BACE,SAACnB,EAAS,wBAAuB,KACjC,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeI,gBAE9B,6BACE,SAACpB,EAAS,yBAAwB,KAClC,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeK,gBAE9B,6BACE,SAACrB,EAAS,2BAA0B,KACpC,SAACC,EAAU,UAlEJ,SAACqB,GACpB,IAAMC,EAAW,IAAIC,KAAKF,GAEpBG,EAAMF,EAASG,UACfC,EAAQJ,EAASK,WAAa,EAC9BC,EAAON,EAASO,cAChBC,EAAQR,EAASS,WACjBC,EAAUV,EAASW,aAEzB,MAAM,GAAN,OAAUT,EAAIU,WAAWC,SAAS,EAAG,KAAI,YAAIT,EAC1CQ,WACAC,SAAS,EAAG,KAAI,YAAIP,EAAKM,WAAWC,SAAS,EAAG,KAAI,YAAIL,EACxDI,WACAC,SAAS,EAAG,KAAI,YAAIH,EAAQE,WAAWC,SAAS,EAAG,KACxD,CAqDiBC,CAA0B,QAAd,EAAC3B,EAASM,YAAI,aAAb,EAAesB,yBAS/C,EAEA,UAAeC,EAAAA,KAAWpC,E","sources":["components/commands/GitHub.tsx"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst Card = styled.section`\n  display: flex;\n  width: 60%;\n  border-radius: 12px;\n  box-sizing: border-box;\n  background-color: #22272e;\n  padding: 10px;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media (max-width: 950px) {\n    width: 90%;\n  }\n\n  @media (max-width: 450px) {\n    padding: 2px;\n    width: 100%;\n    font-size: 11px;\n  }\n`;\n\nconst ProfilePictureContainer = styled.div`\n  display: flex;\n  width: 30%;\n  padding: 10px;\n\n  @media (max-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Picture = styled.img`\n  width: 100%;\n  border-radius: 50%;\n`;\n\nconst PictureSkeleton = styled.div`\n  width: 100%;\n  border-radius: 50%;\n  background-color: #22272e;\n`;\n\nconst CardContent = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  line-height: 1.8em;\n  margin-left: 10px;\n  justify-content: center;\n\n  span {\n    width: 100%;\n    display: flex;\n\n    @media (max-width: 1200px) {\n      align-items: center;\n    }\n  }\n  @media (max-width: 750px) {\n    width: 100%;\n  }\n\n  @media (max-width: 450px) {\n    width: 100%;\n    font-size: 11px;\n  }\n`;\n\nconst FieldName = styled.div`\n  width: 25%;\n  font-weight: bold;\n`;\n\nconst FieldValue = styled.div`\n  width: 75%;\n\n  @media (max-width: 1200px) {\n    margin-left: 0.5em;\n  }\n`;\n\nconst FieldValueSkeleton = styled.div`\n  width: 75%;\n  height: 90%;\n  background-color: #22272e;\n`;\nconst GitHub = () => {\n  const userData = useQuery(\"ghData\", () =>\n    fetch(\"https://api.github.com/users/franciscogsilverio\").then((res) =>\n      res.json()\n    )\n  );\n\n  const repoData = useQuery(\"ghRepoData\", () =>\n    fetch(\n      \"https://api.github.com/repos/franciscogsilverio/Terminal-WebPortfolio\"\n    ).then((res) => res.json())\n  );\n\n  const dataStillLoading = userData.isLoading || repoData.isLoading;\n\n  console.log(dataStillLoading);\n\n  const formatedDate = (date: string): string => {\n    const formated = new Date(date);\n\n    const day = formated.getDate();\n    const month = formated.getMonth() + 1;\n    const year = formated.getFullYear();\n    const hours = formated.getHours();\n    const minutes = formated.getMinutes();\n\n    return `${day.toString().padStart(2, \"0\")}/${month\n      .toString()\n      .padStart(2, \"0\")}/${year.toString().padStart(2, \"0\")} ${hours\n      .toString()\n      .padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <Wrapper>\n      <Card>\n        {dataStillLoading ? (\n          <>\n            <ProfilePictureContainer>\n              <PictureSkeleton />\n            </ProfilePictureContainer>\n            <CardContent>\n              <span>\n                <FieldName>Name:</FieldName> <FieldValueSkeleton />\n              </span>\n              <span>\n                <FieldName>Bio:</FieldName> <FieldValueSkeleton />\n              </span>\n              <span>\n                <FieldName>Folowers:</FieldName> <FieldValueSkeleton />\n              </span>\n              <span>\n                <FieldName>Following:</FieldName> <FieldValueSkeleton />\n              </span>\n              <span>\n                <FieldName>Last update:</FieldName> <FieldValueSkeleton />\n              </span>\n            </CardContent>\n          </>\n        ) : (\n          <>\n            <ProfilePictureContainer>\n              <Picture src={userData.data?.avatar_url} />\n            </ProfilePictureContainer>\n            <CardContent>\n              <span>\n                <FieldName>Name:</FieldName>{\" \"}\n                <FieldValue>{userData.data?.name}</FieldValue>{\" \"}\n              </span>\n              <span>\n                <FieldName>Bio:</FieldName>{\" \"}\n                <FieldValue>{userData.data?.bio}</FieldValue>\n              </span>\n              <span>\n                <FieldName>Folowers:</FieldName>{\" \"}\n                <FieldValue>{userData.data?.followers}</FieldValue>\n              </span>\n              <span>\n                <FieldName>Following:</FieldName>{\" \"}\n                <FieldValue>{userData.data?.following}</FieldValue>\n              </span>\n              <span>\n                <FieldName>Last update:</FieldName>{\" \"}\n                <FieldValue>\n                  {formatedDate(repoData.data?.pushed_at)}\n                </FieldValue>\n              </span>\n            </CardContent>\n          </>\n        )}\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(GitHub);\n"],"names":["Wrapper","styled","Card","ProfilePictureContainer","Picture","PictureSkeleton","CardContent","FieldName","FieldValue","FieldValueSkeleton","GitHub","userData","useQuery","fetch","then","res","json","repoData","dataStillLoading","isLoading","console","log","src","data","avatar_url","name","bio","followers","following","date","formated","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","toString","padStart","formatedDate","pushed_at","React"],"sourceRoot":""}